name: Build macOS Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build macOS executable with PyInstaller
        run: |
          chmod +x build.sh
          ./build.sh
        shell: bash

      - name: Archive the executable
        run: |
          mv dist/macos/ADBenQ/ADBenQ /tmp/ADBenQ
          tar -czf adbenq_macos_arm.tar.gz -C /tmp ADBenQ

      - name: Get latest release tag name
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const latestRelease = await github.rest.repos.getLatestRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            core.setOutput('tag_name', latestRelease.data.tag_name);

      - name: Upload Release Asset
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          action: uploadAssets
          artifacts: "adbenq_macos_arm.tar.gz"
          tag: ${{ steps.get_latest_release.outputs.tag_name }}
          allowUpdates: true
